{"expireTime":9007200818977755000,"key":"transformer-remark-markdown-html-5915c3d162e0786853a33c30e73af8b4-gatsby-remark-relative-imagesgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-images-","val":"<p> One of my favourite and exciting topic was how can i implement file uploading in my website. I used to watch youtube videos where they do it with <code class=\"language-text\">PHP</code>. But they all just don't workout for me. Thank god there's <code class=\"language-text\">File API</code> which  allows javascript to access information about file like <code class=\"language-text\">Name</code>, <code class=\"language-text\">Last modified</code>, <code class=\"language-text\">Type</code>, <code class=\"language-text\">Size</code>, <code class=\"language-text\">webkitRelativePath</code>. Let's dive deeper on how to use it.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!--  to get file as input --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p> Initial input value would be zero and as the user selects file it changes.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//  selecting element</span>\n<span class=\"token keyword\">const</span> \n<span class=\"token comment\">//  fire an event handler when the input value changes</span>\n   document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>"}