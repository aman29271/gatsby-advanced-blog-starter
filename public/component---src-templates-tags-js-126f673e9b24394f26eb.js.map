{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["tagPage","_ref","data","tag","pageContext","_data$allMarkdownRema","allMarkdownRemark","edges","tagHeader","totalCount","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","className","map","_ref2","node","frontmatter","fields","id","date","thumbnail","slug","key","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","gatsby_image__WEBPACK_IMPORTED_MODULE_6___default","fixed","childImageSharp","query","frontmatterfragment"],"mappings":"kRAsCeA,UA/BC,SAAAC,GAAsB,IAApBC,EAAoBD,EAApBC,KACNC,EAD0BF,EAAfG,YACXD,IAD0BE,EAEJH,EAAKI,kBAA3BC,EAF0BF,EAE1BE,MACFC,EAAS,QACI,IAJeH,EAEnBI,WAEQ,GAAK,KADb,gBAGnB,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,MAAOP,IACfE,EAAAC,EAAAC,cAAA,MAAII,UAAS,SAAYR,EAAUE,EAAAC,EAAAC,cAAA,YAAOT,IAC1CO,EAAAC,EAAAC,cAAA,MAAII,UAAS,SACRT,EAAMU,IAAI,SAAAC,GAAY,IAAVC,EAAUD,EAAVC,KACFC,EAAyBD,EAAzBC,YAAYC,EAAaF,EAAbE,OAAOC,EAAMH,EAANG,GAClBP,EAAwBK,EAAxBL,MAAMQ,EAAkBH,EAAlBG,KAAKC,EAAaJ,EAAbI,UACXC,EAASJ,EAATI,KACR,OACIf,EAAAC,EAAAC,cAAA,MAAIc,IAAKJ,EAAIN,UAAS,QAClBN,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMX,UAAS,kBAAqBY,GAAE,SAAYH,GAChDD,EAAYd,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CAAKmB,MAAON,EAAUO,gBAAgBD,QAAW,KAC/DpB,EAAAC,EAAAC,cAAA,OAAKI,UAAS,WACdN,EAAAC,EAAAC,cAAA,UAAKG,GACLL,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMI,UAAS,QAAWO,YAW9C,IAAMS,EAAK,aAqBLC,EAAmB","file":"component---src-templates-tags-js-126f673e9b24394f26eb.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport Layout from '../components/layout'\nimport  '../components/modules/posts.scss'\nimport { Link,graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst tagPage = ({data,pageContext})=>{\n    const { tag } = pageContext\n    const { edges, totalCount } = data.allMarkdownRemark\n    const tagHeader = `Post${\n        totalCount === 1 ? \"\" : \"s\"\n      } tagged with `\nreturn(\n    <Layout>\n        <Helmet title={tagHeader}></Helmet>\n        <h2 className={`title`}>{tagHeader}<u>{`${tag}`}</u></h2>\n        <ul className={`posts`}>\n            {edges.map(({node}) => {\n                const {frontmatter,fields,id} = node\n                const { title,date,thumbnail} = frontmatter\n                const { slug } = fields\n                return(\n                    <li key={id} className={`post`}>\n                        <Link className={`content_wrapper`} to ={`/blog/${slug}`} >\n                        { thumbnail ? <Img fixed={thumbnail.childImageSharp.fixed}/> : null}\n                        <div className={`content`}>\n                        <h3>{title}</h3>\n                        <p><span className={`date`}>{date}</span></p>\n                        </div>\n                        </Link>\n                    </li>\n                )\n            })}\n        </ul>\n    </Layout>\n)\n}\nexport default tagPage\nexport const query = graphql`\nquery($tag : String){\n    allMarkdownRemark(\n        limit: 2000\n        sort:{fields: [frontmatter___date], order: DESC }\n        filter:{ frontmatter:{ tags: { in: [$tag] } } }\n    ){\n        totalCount\n        edges{\n            node{\n                id,\n                fields{\n                    slug\n                }\n                ,\n                ...FrontmatterFragmentBlog\n            }\n        }\n    }\n}\n`\nexport const frontmatterfragment = graphql`\nfragment FrontmatterFragmentBlog on MarkdownRemark{\n    frontmatter{\n        title\n        date(formatString:\"ddd, Do MMMM YYYY\")\n        tags\n        thumbnail{\n            childImageSharp{\n                fixed(height:150 , width:150){\n                    ...GatsbyImageSharpFixed\n                }\n            }\n        }\n    }\n}\n`"],"sourceRoot":""}